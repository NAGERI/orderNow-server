generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(cuid())
  username String   @unique
  password String
  role     UserRole @default(USER)
  orders   Order[]
  stores   Store[]
}

model Store {
  id          String      @id @default(cuid())
  adminId     String?
  name        String      @unique
  description String?
  status      StoreStatus @default(ACTIVE)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  items       Item[]
  User        User?       @relation(fields: [adminId], references: [id])
  Order       Order[]

  @@index([adminId])
}

model Item {
  id          String      @id @default(cuid())
  name        String
  description String?
  price       Int
  storeId     String
  store       Store       @relation(fields: [storeId], references: [id])
  orderItems  OrderItem[]
}

model Order {
  id         String      @id @default(cuid())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  userId     String
  status     OrderStatus @default(PENDING)
  orderItems OrderItem[]
  user       User        @relation(fields: [userId], references: [id])
  Store      Store?      @relation(fields: [storeId], references: [id])
  storeId    String?

  @@index([userId])
}

model OrderItem {
  id       String @id @default(cuid())
  quantity Int
  orderId  String
  itemId   String
  order    Order  @relation(fields: [orderId], references: [id])
  item     Item   @relation(fields: [itemId], references: [id])

  @@index([orderId])
  @@index([itemId])
}

enum UserRole {
  ADMIN
  USER
}

enum StoreStatus {
  ACTIVE
  INACTIVE
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}
